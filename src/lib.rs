//! Библиотека для работы с целочисленными конечными виртуальными (лёгкими) векторами.

/// Тип данных, который имеют значения векторов.
pub type Int = i32;

pub mod constant;
pub mod cycle;
pub mod range;

/// Описывает общие свойства виртуального вектора.
pub trait LightVec {
    /// Возвращает элемент вектора, содержащийся по переданному индексу.
    fn get(&self, index: usize) -> Int;

    /// Разделяет вектор на две части по переданному индексу.
    ///
    /// # Паникует
    /// если размер вектора равен 1 или же если индекс выходит за пределы размера вектора.
    fn split_at(self, index: usize) -> (Self, Self)
    where
        Self: Sized;

    /// Преобразовывает виртуальный вектор в реальный.
    fn to_vec(self) -> Vec<Int>;

    /// Объединяет два вектора.
    fn concat<V1, V2>(self, vec: V1) -> V2
    where
        V1: LightVec,
        V2: LightVec;
}
